apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chouette2.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "chouette2.name" . }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "common.labels" . | indent 8 }}
    spec:
      containers:
        - command:
            - /cloud_sql_proxy
            - -instances={{ .Values.sql.instance }}
            - -term_timeout=30s
            - -log_debug_stdout
            - -verbose=false
          image: gcr.io/cloudsql-docker/gce-proxy:1.29.0-alpine
          imagePullPolicy: IfNotPresent
          name: cloudsql-proxy
          resources:
            requests:
              cpu: 50m
              memory: 40Mi
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "ALL" ]
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
            - name: TZ
              value: Europe/Oslo
            - name: RAILS_ENV
              value: production
          envFrom:
            - configMapRef:
                name: chouette-redis-connection
            - secretRef:
                name: ror-chouette2-secret
          image: {{ .Values.image.identifier }}
          name: chouette2
          ports:
            - containerPort: {{ .Values.service.http.internalPort }}
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: {{ .Values.service.http.internalPort }}
              scheme: HTTP
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          resources:
            limits:
              cpu: {{ .Values.resources.cpuLimit }}
              memory: {{ .Values.resources.memLimit }}
            requests:
              cpu: {{ .Values.resources.cpuRequest }}
              memory: {{ .Values.resources.memRequest }}
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "ALL" ]
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /code/config/database.yml
              name: chouette2-config
              subPath: database.yml
            - mountPath: /code/config/application.yml
              name: chouette2-config
              subPath: application.yml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: chouette2-config
          name: chouette2-config